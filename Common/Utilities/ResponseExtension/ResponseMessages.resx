<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_DataDeleteFailedMsg" xml:space="preserve">
    <value>Data Deleted Failed.</value>
  </data>
  <data name="Common_DataDeleteMsg" xml:space="preserve">
    <value>Data Deleted SuccessFully.</value>
  </data>
  <data name="Common_DataFetchSuccess" xml:space="preserve">
    <value>Data fetched successfully</value>
  </data>
  <data name="Common_DataSaveMsg" xml:space="preserve">
    <value>Data saved successfully</value>
  </data>
  <data name="Err_AccountAlreadyExist" xml:space="preserve">
    <value>Account Name Already Exists.</value>
  </data>
  <data name="Err_DataSaveFailed" xml:space="preserve">
    <value>Save operation failed</value>
  </data>
  <data name="Err_DeadlockArise" xml:space="preserve">
    <value>Deadlock Arise.</value>
  </data>
  <data name="Err_DocCategoryAlreadyExist" xml:space="preserve">
    <value>Doc Category Already Exists.</value>
  </data>
  <data name="Err_EmailAlreadyExist" xml:space="preserve">
    <value>Email already exists.</value>
  </data>
  <data name="Err_ForOrganisationValid" xml:space="preserve">
    <value>UnAuthorised Access</value>
  </data>
  <data name="Err_HdrColumnNameAlreadyExist" xml:space="preserve">
    <value>Same Header Column Number Already Exist.</value>
  </data>
  <data name="Err_HdrNameAlreadyExist" xml:space="preserve">
    <value>Same Header Name Already Exist.</value>
  </data>
  <data name="Err_InvalidAccessToken" xml:space="preserve">
    <value>Invalid access token</value>
  </data>
  <data name="Err_InvalidHmacToken" xml:space="preserve">
    <value>Invalid hmac token</value>
  </data>
  <data name="Err_InvalidParameter" xml:space="preserve">
    <value>Invalid Parameters.</value>
  </data>
  <data name="Err_LabelNameAlreadyExist" xml:space="preserve">
    <value>Same Label Name Already Exist.</value>
  </data>
  <data name="Err_MaterialGroupAlreadyExist" xml:space="preserve">
    <value>Material Group Name Already Exists.</value>
  </data>
  <data name="Err_MobileAlreadyExist" xml:space="preserve">
    <value>Mobile already exists.</value>
  </data>
  <data name="Err_ParentAccountShouldNotSame" xml:space="preserve">
    <value>Account Name And Parent Account Should Not Be Same.</value>
  </data>
  <data name="Err_ParentTeamNameAlreadyExist" xml:space="preserve">
    <value>Already A parent Team present.</value>
  </data>
  <data name="Err_RalAlreadyExist" xml:space="preserve">
    <value>Ral Color Already Exists.</value>
  </data>
  <data name="Err_RalCodeAlreadyExist" xml:space="preserve">
    <value>Ral Color Code Already Exists.</value>
  </data>
  <data name="Err_RptNameAlreadyExist" xml:space="preserve">
    <value>Report Category Name Already Exists.</value>
  </data>
  <data name="Err_TagDisplayDeleteFailed" xml:space="preserve">
    <value>This Tag is used Other Place So it is not Deleted.</value>
  </data>
  <data name="Err_TagHeaderDeleteFailed" xml:space="preserve">
    <value>Header Contains Some Tag So It Not Deleted.</value>
  </data>
  <data name="Err_teammanegerNameAlreadyExist" xml:space="preserve">
    <value>Same User Used As Maneger and User Also.</value>
  </data>
  <data name="Err_TeamNameAlreadyExist" xml:space="preserve">
    <value>SameTeam Name Already Exis.</value>
  </data>
  <data name="Err_UnhandledException" xml:space="preserve">
    <value>Unhandled exception</value>
  </data>
  <data name="Err_UsernameAlreadyExist" xml:space="preserve">
    <value>Username already exists.</value>
  </data>
  <data name="Registration_Success" xml:space="preserve">
    <value>User registered successfully</value>
  </data>
  <data name="Err_Similarity" xml:space="preserve">
    <value>Item Name Already Exists</value>
  </data>
  <data name="Common_DataNotFound" xml:space="preserve">
    <value>No Data Found!</value>
  </data>
  <data name="Err_fgSystemOwnerAlreadyExist" xml:space="preserve">
    <value>Already A owner Is Present In Your List.</value>
  </data>
  <data name="Err_fgSystemNameExist" xml:space="preserve">
    <value>Already A Same System Name Is Present..</value>
  </data>
  <data name="Err_TeamDeadLock" xml:space="preserve">
    <value>Your Parent Team Can not be used as parent team,it already a sub team of your Team.</value>
  </data>
  <data name="Err_UserExistsForRMCatalogId" xml:space="preserve">
    <value>User already exist for this Catalog</value>
  </data>
  <data name="Err_UserExistsForAccessType" xml:space="preserve">
    <value>Updation failed as trying to update the user which has access type 1</value>
  </data>
  <data name="Err_DeletePrimaryUser" xml:space="preserve">
    <value>Cant delete primary user</value>
  </data>
  <data name="Err_DefaultCannotBeDeleted" xml:space="preserve">
    <value>Default cannot be deleted</value>
  </data>
  <data name="Err_DefaultCannotBeUpdated" xml:space="preserve">
    <value>Default cannot be updated</value>
  </data>
  <data name="Err_UnauthorizedAccess" xml:space="preserve">
    <value>Unauthorized Access</value>
  </data>
  <data name="Err_PrimaryUserCannotbeUpdated" xml:space="preserve">
    <value>User Can not be updated to Primary user</value>
  </data>
  <data name="Err_userIdCanntbeUpdated" xml:space="preserve">
    <value>User already exist so it can not be updated</value>
  </data>
  <data name="Err_usernotExist" xml:space="preserve">
    <value>User does not exist</value>
  </data>
  <data name="Err_ReportGroupNameAlreadyExist" xml:space="preserve">
    <value>Same ReportGroup Name Alreday Exist!</value>
  </data>
  <data name="Err_teamUserAlreadyExist" xml:space="preserve">
    <value>Same User Can Not Be Member of Two Teams! </value>
  </data>
  <data name="Err_InconsistentData" xml:space="preserve">
    <value>Inconsistent Data</value>
  </data>
  <data name="rms_err_invalidrmcatid" xml:space="preserve">
    <value>Invalid RmCatId, Pass either Profile or Hardware</value>
  </data>
  <data name="Err_NotAuthoriseForReport" xml:space="preserve">
    <value>You Are Not Authorise To See The Report.!</value>
  </data>
  <data name="Err_InvalidOpportunity" xml:space="preserve">
    <value>Invalid Opportunity</value>
  </data>
</root>